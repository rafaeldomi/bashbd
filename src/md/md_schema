#!/bin/bash

: <<'COMMENT'
schema_get_struct_by_name : Get schema structure by table name
COMMENT

: <<'FUNCTION'
Description: Return the schema record, searching by name
Parameters:
  $1 - Input variable that has the name
		$1[schema] = Schema name to search
	$2 - Output variable to hold the record
FUNCTION
schema_get_struct_by_name() {
	# SS = Schema Struct
	declare -n _SS=$1
  declare -n _OUTPUT="$2"

	unset _OUTPUT
	local SCHEMA

	# Field must exists
	if [ -z ${_SS[schema]} ]; then
		eval $LOGGER ERROR "No schema field found in SchemaStruct"
		return 1
	fi

	LOGGER_MSG="Search for schema: ${_SS[schema]}"
	eval $LOGGER DEBUG

	declare -A DATA
	DATA[file]=$CTABLE_SCHEMAS
	init_file DATA

  # [ scan ]
	declare -A FILTER
	FILTER[total]="1"
	FILTER[stop]="true"
	FILTER[0,0]="2"
	FILTER[0,1]="${_SS[schema]}"

	simple_scan DATA OUTPUT_RECORD FILTER
	eval $M_CHECK_RES

	if [ -z OUTPUT_RECORD ]; then
		LOGGER_MSG="Scan failed"
		eval $LOGGER ERROR
		return 1
	fi

	# [ functions ]
	copy_array OUTPUT_RECORD _OUTPUT

	return 0
}
