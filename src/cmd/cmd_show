#!/bin/bash

show_execute() {
  declare -n _SQLTKN=$1

  local _TYPE=-1
  local _TYPENAME=${_SQLTKN[TYPE]}
  local _OBJECT=${_SQLTKN[OBJECT]}
  local _OBJECTID=-1

  # declare -p TOKENS

  if [ -z ${_SQLTKN[TYPE]} ]; then
    LOGGER_MSG="Invalid syntax for SHOW command"
    eval $LOGGER ERROR $LOGGER_MSG
    return 1
  fi

  _TYPE=${COMMENT_TYPE_MAP[${_TYPENAME^^}]}
  if [ "$_TYPE" == "" ]; then
    LOGGER_MSG="SHOW COMMENT on $_TYPENAME not supported"
    eval $LOGGER ERROR $LOGGER_MSG
    return 1
  fi

  # Find the objectId
  case "$_TYPE" in
    $COMMENT_TYPE_SCHEMA)
      P_SCHEMA="$_OBJECT"
      eval $M_GET_SCHEMA
      _OBJECTID=${SCHEMA_RECORD[1]}
      ;;
    $COMMENT_TYPE_TABLE)
      P_TABLE="$_OBJECT"
      eval $M_GET_TABLE
      _OBJECTID=${TABLE_RECORD[1]}
      ;;
  esac

  # Check if exists
  # [ md_comment ]
  declare -A CS

  int_to_hex type_hex 8 "${_TYPE}"

  CS[type]="${type_hex}"
  CS[objectId]="${_OBJECTID}"
  # declare -p CS
  if ! comment_get_struct_by_type_objectId CS RECORD; then
    LOGGER_MSG="Comment not found"
    eval $LOGGER ERROR
    return 1
  fi

  # [ functions ]
  timing_process

  # [ printer ]
  declare -A PRINTER
  printer_init PRINTER "COMMENT"
  printer_new_row PRINTER
  printer_row_field PRINTER "${RECORD[4]}"
  printer PRINTER

  return 0

}