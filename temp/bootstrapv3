#!/bin/bash

. storage

## CONSTANTES TABLES
readonly CTABLE_SCHEMAS=(1 schemas)
readonly CTABLE_TABLES=(2 tables)
readonly CTABLE_ATTRS=(3 attrs)
readonly CTABLE_TYPES=(4 types)
readonly CTABLE_FUNCTIONS=(5 functions)
readonly CTABLE_INDEX=(6 index)
readonly CTABLE_LANG=(7 language)

row_init() {
	VALUES=($@)

	ROW[FIELDS]="${#}"
	ROW[ROWS]=0

	for i in `seq 1 ${#}`; do
		ROW[FIELDS_$i]="${VALUES[i-1]}"
	done
}

row_add_value() {
	VALUES=("$@")

	fn=0
	let ROW[ROWS]=${ROW[ROWS]}+1
	rown=${ROW[ROWS]}

	for pos in `seq 1 ${#VALUES[@]}`; do
		let fn=$fn+1

		ROW[$rown,VALUE_$fn]="${VALUES[pos-1]}"
	done
}

dec_to_hex() {
	local _RET=$1

	echo $2

	VALOR=`printf "%08X" $2`

	eval $_RET=$VALOR
}

row_append_simple() {
	local _TABLE=$1

	#echo "Total rows: ${ROW[ROWS]}"
	CROW=""

	# Loop na quantidade de rows inseridos no vetor
	for i in `seq 1 ${ROW[ROWS]}`; do
		# Loop na qtdade de fields que tem na row
		for f in `seq 1 ${ROW[FIELDS]}`; do
			I_VALUE="${ROW[$i,VALUE_$f]}"
			SIZE="${ROW[FIELDS_$f]}"

			#echo "|$I_VALUE|"

			# Verifica se tem que tratar o dado
			case ${SIZE} in
				int)
					#dec_to_hex OUTPUT $I_VALUE
					#CROW=`printf "%s%s" "${CROW}" "${OUTPUT}"`
					CROW=`printf "%s%8s" "${CROW}" "${I_VALUE}"`
					;;

				*)
					CROW=`printf "%s%${SIZE}s" "${CROW}" "${I_VALUE}"`
					;;
			esac

		done
	done

	echo "${CROW}" >> $_TABLE
}

##############################
## Table: schemas
# id   = integer
# name = 200
storage_create_file "TABLE" ${CTABLE_SCHEMAS[0]}

readonly   BOOT_SCHEMA_BASH=(1 bashbd)
readonly BOOT_SCHEMA_PUBLIC=(2 public)

unset ROW
declare -A ROW

row_init int 200
row_add_value ${BOOT_SCHEMA_BASH[@]}
row_add_value ${BOOT_SCHEMA_PUBLIC[@]}
row_append_simple ${CTABLE_SCHEMAS[0]}

echo "Table Schemas OK"

############################
## Table: language
##  id	    int
##  name    200
##  handler 200
storage_create_file "TABLE" ${CTABLE_LANG[0]}

readonly BOOT_LANGUAGE_BASH=(1 builtin 0x0)

unset ROW
declare -A ROW

row_init int 200 200
row_add_value ${BOOT_LANGUAGE_BASH[@]}
row_append_simple ${CTABLE_LANG[0]}

echo "Table Language OK"

############################
## Table: Types
## id		int
## name		200
## fnc_out	200
## size		int
storage_create_file "TABLE" ${CTABLE_TYPES[0]}

readonly BOOT_TYPES_INT=(1 int fnc_out 4)
readonly BOOT_TYPES_CHAR=(2 char 0x0 -1)

unset ROW
declare -A ROW
row_init int 200 200 int
row_add_value ${BOOT_TYPES_INT[@]}
row_add_value ${BOOT_TYPES_CHAR[@]}
row_append_simple ${CTABLE_TYPES[0]}

echo "Table Types OK"

#############################
## Table: tables
## id			int
## name			200
## schema_id	int
storage_create_file "TABLE" ${CTABLE_TABLES[0]}

readonly BOOT_TABLE_SCHEMAS=(${CTABLE_SCHEMAS[@]} 1)
readonly BOOT_TABLE_TABLE=(${CTABLE_TABLES[@]} 1)
readonly BOOT_TABLE_ATTRS=(${CTABLE_ATTRS[@]} 1)
readonly BOOT_TABLE_TYPES=(${CTABLE_TYPES[@]} 1)
readonly BOOT_TABLE_FUNCTIONS=(${CTABLE_FUNCTIONS[@]} 1)
readonly BOOT_TABLE_INDEX=(${CTABLE_INDEX[@]} 1)
readonly BOOT_TABLE_LANGUAGE=(${CTABLE_LANG[@]} 1)

unset ROW
declare -A ROW

row_init int 200 int
row_add_value ${BOOT_TABLE_SCHEMAS[@]}
row_add_value ${BOOT_TABLE_TABLE[@]}
row_add_value ${BOOT_TABLE_ATTRS[@]}
row_add_value ${BOOT_TABLE_TYPES[@]}
row_add_value ${BOOT_TABLE_FUNCTIONS[@]}
row_add_value ${BOOT_TABLE_INDEX[@]}
row_add_value ${BOOT_TABLE_INDEX[@]}
row_add_value ${BOOT_TABLE_LANGUAGE[@]}

row_append_simple ${CTABLE_TABLES[0]}

echo "Table Tables OK"

##########################3
## Table: functions
## id		int
## name		200
## handler	200
## lang_ud	int
storage_create_file "TABLE" ${CTABLE_FUNCTIONS[0]}

readonly BOOT_FNC_SUM=(1 sum bashbd.sum 1)
readonly BOOT_FNC_COALESCE=(2 coalesce bashbd.coalesce 1)
readonly BOOT_FNC_MAX=(3 max bashbd.max 1)
readonly BOOT_FNC_MIN=(4 min bashbd.min 1)

unset ROW
declare -A ROW

row_init int 200 200 int
row_add_value ${BOOT_FNC_SUM[@]}
row_add_value ${BOOT_FNC_COALESCE[@]}
row_add_value ${BOOT_FNC_MAX[@]}
row_add_value ${BOOT_FNC_MIN[@]}

row_append_simple ${CTABLE_FUNCTIONS[0]}

echo "Table functions OK"

##########################
## TAble index
## id 		int
## table_id	int
## fields	200
storage_create_file "TABLE" ${CTABLE_INDEX[0]}

echo "Table Index OK"

##########################
## Table Attrs
## id		int
## table_id	int
## name		200
## types_id	int
## size		int
storage_create_file "TABLE" ${CTABLE_ATTRS[0]}

# Types
# 1 - Integer
# 2 - Char
readonly BOOT_SCHEMAS_ID=(1 ${CTABLE_SCHEMAS[0]} id 1 -1)
readonly BOOT_SCHEMAS_NAME=(2 ${CTABLE_SCHEMAS[0]} name 1 -1)
readonly BOOT_LANG_ID=(3 ${CTABLE_LANG[0]} id 1 -1)
readonly BOOT_LANG_NAME=(4 ${CTABLE_LANG[0]} name 2 200)
readonly BOOT_LANG_HAND=(5 ${CTABLE_LANG[0]} handler 2 200)
readonly BOOT_TYPES_ID=(6 ${CTABLE_TYPES[0]} id 1 -1)
readonly BOOT_TYPES_NAME=(7 ${CTABLE_TYPES[0]} name 2 200)
readonly BOOT_TYPES_FNC=(8 ${CTABLE_TYPES[0]} fnc_out 2 200)
readonly BOOT_TYPES_SIZE=(9 ${CTABLE_TYPES[0]} size 1 -1)
readonly BOOT_TABLES_ID=(10 ${CTABLE_TABLES[0]} id 1 -1)
readonly BOOT_TABLES_NAME=(11 ${CTABLE_TABLES[0]} name 2 200)
readonly BOOT_TABLES_SCHEMAID=(12 ${CTABLE_TABLES[0]} schema_id 1 -1)
readonly BOOT_ATTRS_ID=(13 ${CTABLE_ATTRS[0]} id 1 -1)
readonly BOOT_ATTRS_TABLEID=(14 ${CTABLE_ATTRS[0]} table_id 1 -1)
readonly BOOT_ATTRS_NAME=(15 ${CTABLE_ATTRS[0]} name 2 200)
readonly BOOT_ATTRS_TYPES=(16 ${CTABLE_ATTRS[0]} types_id 1 -1)
readonly BOOT_ATTRS_SIZE=(17 ${CTABLE_ATTRS[0]} size 1 -1)
readonly BOOT_FUNCTIONS_ID=(18 ${CTABLE_FUNCTIONS[0]} id 1 -1)
readonly BOOT_FUNCTIONS_NAME=(19 ${CTABLE_FUNCTIONS[0]} name 2 200)
readonly BOOT_INDEX_ID=(20 ${CTABLE_INDEX[0]} id 1 -1)
readonly BOOT_INDEX_NAME=(21 ${CTABLE_INDEX[0]} name 2 200)
readonly BOOT_INDEX_FIELDS=(22 ${CTABLE_INDEX[0]} fields 2 200)

unset ROW
declare -A ROW

row_init int int 200 int int
row_add_value ${BOOT_SCHEMAS_ID[@]}
row_add_value ${BOOT_SCHEMAS_NAME[@]}
row_add_value ${BOOT_LANG_ID[@]}
row_add_value ${BOOT_LANG_NAME[@]}
row_add_value ${BOOT_LANG_HAND[@]}
row_add_value ${BOOT_TYPES_ID[@]}
row_add_value ${BOOT_TYPES_NAME[@]}
row_add_value ${BOOT_TYPES_FNC[@]}
row_add_value ${BOOT_TYPES_SIZE[@]}
row_add_value ${BOOT_TABLES_ID[@]}
row_add_value ${BOOT_TABLES_NAME[@]}
row_add_value ${BOOT_TABLES_SCHEMAID[@]}
row_add_value ${BOOT_ATTRS_ID[@]}
row_add_value ${BOOT_ATTRS_TABLEID[@]}
row_add_value ${BOOT_ATTRS_NAME[@]}
row_add_value ${BOOT_ATTRS_TYPES[@]}
row_add_value ${BOOT_ATTRS_SIZE[@]}
row_add_value ${BOOT_FUNCTIONS_ID[@]}
row_add_value ${BOOT_FUNCTIONS_NAME[@]}
row_add_value ${BOOT_INDEX_ID[@]}
row_add_value ${BOOT_INDEX_NAME[@]}
row_add_value ${BOOT_INDEX_FIELDS[@]}

row_append_simple ${CTABLE_ATTRS[0]}

echo "Table Attrs OK"
