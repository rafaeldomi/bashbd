#!/bin/bash

##############
# Program to dump file contents
##############

. const
. storage
. temp/table
. functions
. log

find_binaries

declare -A ATABLE
FILE=$1

if [ ! -f $FILE ]; then
	echo "File $FILE not found. Exiting"
	exit 1
fi

# $1 - Field N
# $2 - Value
check_size() {
	atual=${ATABLE[S_$1]}
	input=${#2}

	if [ -z $atual ]; then
		atual=0
	fi

	if [ "$input" -gt "$atual" ]; then
		ATABLE[S_$1]=$input
	fi
}

echo "Dumping: $FILE"

TMP=$($PRG_DD if=$FILE ibs=1 count=1 conv=notrunc status=none | xxd -p)
VALUE=${TMP^^}

get_magic_code_name OUT $VALUE

echo "  Type: $VALUE ($OUT)"

# -t = Remove delimitador no final de cada linha (sem enter)
# -s = Descarta a primeira linha (File Type)
# -O = Inicia atribuição no index x
# -d = Delimitador de record
mapfile -t -s 1 -O 1 -d `echo -en "\x1E"` DATA < $FILE

#echo "Total Rows: ${#DATA[@]}"
ATABLE[ROWS]=${#DATA[@]}

rown=0
TABDATA=""
TABFLD="Row N, Alive"

# Loop in the records
for i_row in "${DATA[@]}"; do
	# Break the row
	mapfile -t -O 1 -d `echo -en "\x1D"` FLD <<<$(echo "${i_row[@]}")

	let rown++
	#echo "Row: ${rown}"

	# Loop in the fields on the record
	rowf=0
	TABSEP=""

	TABDATA="${TABDATA}$rown"

	for f in "${FLD[@]}"; do
		# Like a trim
		inf=$(echo $f)

		# Check size
		check_size $rowf "${inf}"

		# Metadata
		if [ "$rowf" -eq 0 ]; then
			:
			#echo "Metadata"
			#echo "   Alive? ${inf:0:1}"
		else
			#echo " $rowf = $inf"
			if [ "${rown}" -eq 1 ]; then
				TABFLD="$TABFLD,Fld${rowf}"
			fi
		fi

		let rowf++

		TABDATA="${TABDATA},${inf}"
		TABSEP=","

		ATABLE[${rown}_${rowf}]="$inf"
	done

	TABDATA="$TABDATA
"

	# Só no primeiro registro
	if [ "$rown" == 1 ]; then
		ATABLE[TF]=$rowf
	fi
done

echo "Total fields: ${ATABLE[TF]}"
echo "Total Rows: ${ATABLE[ROWS]}"
echo ""

#echo "||${TABFLD},${TABDATA}||"

printTable ',' "${TABFLD}
${TABDATA}"
