#!/bin/bash

cmd_menu() {
	if [ "${1^^}" == "HELP" ]; then
		menu_show_help
		return 0
	fi

	# Break in tokens
	# TKN 0 = The command
	# TKN 1 = Option, if the command permits
	local TKN=(${@})

	# Vim shows that using "$array_var[x]:init:end" is wrong, but is correct
	case "${TKN[0]:1:1}" in
		q)  finish 0;;
		## TODO
		## Find a better place to put the menu_list functions
		t)	menu_list_tables;;	 	# [ menu ]
		s)  menu_list_schemas;;  	# [ menu ]
		f)  menu_list_functions;;	# [ menu ]
		S)  menu_list_sequences;;	# [ menu ]
		y)  menu_list_types;;		# [ menu ]
		l)  menu_list_lang;;		# [ menu ]
		i)  menu_list_index;;		# [ menu ]
		c)  menu_warm_cache "${TKN[1]}";;
		\?)	menu_show_help;;
		*)  echo "Menu Comando $PAR n√£o reconhecido"
	esac

	return 0
}

menu_show_help() {
	writeln "Command menu"
	writeln ""
	writeln "\\?       Show this help"
	writeln ""
	writeln "\\t       List tables"
	writeln "\\s       List schemas"
	writeln "\\f       List functions"
	writeln "\\l       List languages"
	writeln "\\S       List sequences"
	writeln "\\y       List Types"
	writeln "\\i       List Indexes"
	writeln ""
	writeln "\\c [obj] Warm cache"
	writeln "   schemas"
	writeln "   functions"
	writeln "   languages"
	writeln "   tables"
    writeln ""
	writeln "\\q     Quit program"
}

###################################################
###################################################
map_file_rows() {
	unset rows
	mapfile -t -s 1 -O 1 -d `$PRG_ECHO -e -n "\x1E"` rows < $1
}

map_fields() {
	unset fields
	mapfile -t -O 1 -d `$PRG_ECHO -en "\x1D"` fields <<<$( $PRG_ECHO "$1")
}

###################################################
###################################################
menu_list_sequences() {
	table_display_dump_table "Listing Sequences" $CTABLE_SEQUENCE "id,schema_id,name,last_value"
}

menu_list_schemas() {
	table_display_dump_table "Listing Schemas" $CTABLE_SCHEMAS "id,name"
}

menu_list_tables() {
	table_display_dump_table "Listing Tables" $CTABLE_TABLES "id,name,schema_id"
}

menu_list_functions() {
	table_display_dump_table "Listing functions" $CTABLE_FUNCTIONS "id,name,handler,lang_id"
}

menu_warm_cache() {
	# Do the cache if necessary
	cache_do_cache $CTABLE_SCHEMAS
}

menu_list_types() {
	table_display_dump_table "Listing Types" $CTABLE_TYPES "id,name,fnc_out,size"
}

menu_list_lang() {
	table_display_dump_table "Listing Languages" $CTABLE_LANG "id,name,handler"
}
menu_list_index() {
	table_display_dump_table "Listing Indexes" $CTABLE_INDEX "id,table_id,fields"
}
